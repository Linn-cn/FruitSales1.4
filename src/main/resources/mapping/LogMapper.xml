<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zl.mapper.LogMapper" >
  <resultMap id="BaseResultMap" type="com.zl.pojo.LogDO" >
    <id column="logId" property="logId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="remoteAddr" property="remoteAddr" jdbcType="VARCHAR" />
    <result column="requestUri" property="requestUri" jdbcType="VARCHAR" />
    <result column="method" property="method" jdbcType="VARCHAR" />
    <result column="params" property="params" jdbcType="VARCHAR" />
    <result column="exception" property="exception" jdbcType="VARCHAR" />
    <result column="operateDate" property="operateDate" jdbcType="TIMESTAMP" />
    <result column="timeout" property="timeout" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    logId, type, title, remoteAddr, requestUri, method, params, exception, operateDate, 
    timeout, username
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zl.pojo.logDOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from log
    where logId = #{logId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from log
    where logId = #{logId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zl.pojo.logDOExample" >
    delete from log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zl.pojo.LogDO" >
    insert into log (logId, type, title, 
      remoteAddr, requestUri, method, 
      params, exception, operateDate, 
      timeout, username)
    values (#{logId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{remoteAddr,jdbcType=VARCHAR}, #{requestUri,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, 
      #{params,jdbcType=VARCHAR}, #{exception,jdbcType=VARCHAR}, #{operateDate,jdbcType=TIMESTAMP}, 
      #{timeout,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zl.pojo.LogDO" >
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        logId,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="remoteAddr != null" >
        remoteAddr,
      </if>
      <if test="requestUri != null" >
        requestUri,
      </if>
      <if test="method != null" >
        method,
      </if>
      <if test="params != null" >
        params,
      </if>
      <if test="exception != null" >
        exception,
      </if>
      <if test="operateDate != null" >
        operateDate,
      </if>
      <if test="timeout != null" >
        timeout,
      </if>
      <if test="username != null" >
        username,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="remoteAddr != null" >
        #{remoteAddr,jdbcType=VARCHAR},
      </if>
      <if test="requestUri != null" >
        #{requestUri,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="params != null" >
        #{params,jdbcType=VARCHAR},
      </if>
      <if test="exception != null" >
        #{exception,jdbcType=VARCHAR},
      </if>
      <if test="operateDate != null" >
        #{operateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="timeout != null" >
        #{timeout,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zl.pojo.logDOExample" resultType="java.lang.Integer" >
    select count(*) from log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update log
    <set >
      <if test="record.logId != null" >
        logId = #{record.logId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.remoteAddr != null" >
        remoteAddr = #{record.remoteAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.requestUri != null" >
        requestUri = #{record.requestUri,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null" >
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.params != null" >
        params = #{record.params,jdbcType=VARCHAR},
      </if>
      <if test="record.exception != null" >
        exception = #{record.exception,jdbcType=VARCHAR},
      </if>
      <if test="record.operateDate != null" >
        operateDate = #{record.operateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.timeout != null" >
        timeout = #{record.timeout,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update log
    set logId = #{record.logId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      remoteAddr = #{record.remoteAddr,jdbcType=VARCHAR},
      requestUri = #{record.requestUri,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      params = #{record.params,jdbcType=VARCHAR},
      exception = #{record.exception,jdbcType=VARCHAR},
      operateDate = #{record.operateDate,jdbcType=TIMESTAMP},
      timeout = #{record.timeout,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zl.pojo.LogDO" >
    update log
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="remoteAddr != null" >
        remoteAddr = #{remoteAddr,jdbcType=VARCHAR},
      </if>
      <if test="requestUri != null" >
        requestUri = #{requestUri,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="params != null" >
        params = #{params,jdbcType=VARCHAR},
      </if>
      <if test="exception != null" >
        exception = #{exception,jdbcType=VARCHAR},
      </if>
      <if test="operateDate != null" >
        operateDate = #{operateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="timeout != null" >
        timeout = #{timeout,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
    </set>
    where logId = #{logId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zl.pojo.LogDO" >
    update log
    set type = #{type,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      remoteAddr = #{remoteAddr,jdbcType=VARCHAR},
      requestUri = #{requestUri,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR},
      exception = #{exception,jdbcType=VARCHAR},
      operateDate = #{operateDate,jdbcType=TIMESTAMP},
      timeout = #{timeout,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR}
    where logId = #{logId,jdbcType=VARCHAR}
  </update>

  <!-- 分页查询所有日志对象 -->
  <select id="listLogDO" parameterType="com.zl.util.AjaxPutPage" resultMap="BaseResultMap">
    SELECT
        log.logId,
        log.type,
        log.title,
        log.remoteAddr,
        log.requestUri,
        log.method,
        log.params,
        log.exception,
        log.operateDate,
        log.timeout,
        log.username
    FROM
        log
    ORDER BY log.operateDate DESC
    LIMIT #{start},#{limit}
  </select>
  
  <select id="getLogCount" resultType="java.lang.Long">
    select count(logId) from log
  </select>
  
  <delete id="deleteLogByFiveday">
    DELETE
    FROM
      log
    WHERE
    DATE(log.operateDate) &lt;= DATE(
      DATE_SUB(NOW(), INTERVAL 5 DAY)
    );
  </delete>
</mapper>